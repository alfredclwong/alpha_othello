import sys
from collections import Counter

import numpy as np
from othello.game import Game
from othello.state import (
    get_flips,
    get_legal_squares,
    get_size,
    is_empty,
    is_legal_square,
)
from othello.types import T_BOARD, T_CLOCK, T_SQUARE, Player


def ai_1(board: T_BOARD, player: Player, clock: T_CLOCK) -> T_SQUARE:
<AI_1>


def ai_2(board: T_BOARD, player: Player, clock: T_CLOCK) -> T_SQUARE:
<AI_2>


if __name__ == "__main__":
    args = sys.argv[1:]
    n_games, size, time_limit_ms = map(int, args)

    results = Counter()
    for i in range(n_games):
        game = Game((ai_1, ai_2), size=size, time_limit_ms=time_limit_ms)
        game.play()
        if not game.done:
            raise ValueError("Game did not finish properly.")
        winner = game.winner
        reason = game.reason
        results[(winner, reason)] += 1

    for (result, reason), count in results.items():
        print(f"{result},{reason},{count}")
